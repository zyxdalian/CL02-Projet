#M=4 products; N=10 customer(order); C=40 capacity of picker;B=4 nb of bathches; R=2 nb of pickers
param infini;
param B,integer;#nb batche
param M,integer;#nb product
param N,integer;#nb customer
param C, integer;#capacity of picker
param R, integer;#nb of pickers
param d{j1 in 1..M, j2 in 1..M}:= if j1=j2 then infini else distance[i,j]; #distances between products
param dO{j in 1..M},>0; #distances between product and O
param q{i in 1..N, j in 1..M},>=0; #quantity of product j ordered by customer i
param q_{i in 1..N, j in 1..M},binary;

var X{i in 1..N,b in 1..B,r in 1..R},binary;#order i assigned to batche b and picker r=1 if not 0
var Y{b in 1..B,j1 in 1..M, j2 in 1..M,r in 1..R},binary;#viste j1 before visite j2 #j in 0.  . M?
var s{b in 1..B, r in 1..R};#start time
var f{b in 1..B, r in 1..R};#finish time
var t{b in 1..B, j in 1..M, r in 1..R};#time of picking product j
var MS{r in 1..R};#makespan of picker r ?
var CPmax;# picking make span

Minimize CPmax;
(2)
(3)
(4){b in 1...B, i in 1...N, j2 in 1...M, r in 1...R} x[i,b,r]*q_[i,j2]<=sum {j1 in 0...M : j1!=j2} Y[b, j1,j2,r]
(5){b in 1..B, j2 in 1..M, r in 1..R} sum{j1 in 0..M, j1!= j2}Y[b,j1,j2,r]+sum{j3 in 0..M, j3!=j2}Y[b,j2,j3,r]<=2*sum{i in 1..N}X[i,b,r]*q_[i,j2]
(6)
(7)
(8){b in 1...B-1, r in 1...R} f[b,r]<=s[b+1,r]
(9){b in 1..B,j in 1..M,r in 1..R}t[b,j,r]>=dO[j]-infini*(1-Y[b,0,j,r])+s[b,r]
(10)
(11)
(12){b in 1...B, r in 1...R} f[b,r]>=s[b,r]
(13){r in 1..R} MS[r]>=f[B,r]
(14){b in 1..B,r in 1..R}CPmax>=f[b,r]



solve;
dispaly


data;
param infini:=9999;
param B:=4;
param M:=4;
param N:=10
param C:=40ï¼›
param R:=2;
param d:= 1 2 3 4 
1
2
3
4
param dO:=
param q:=1 2 3 4
1
2
3
4
5
6
7
8
9
10
param q_:=1 2 3 4 
1
2
3
4
5
6
7
8
9
10
